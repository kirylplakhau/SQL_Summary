
				*** ФУНКЦИИ ***

Функции SQL серьезно облегчают жизнь программистов и в некоторой степени вносят элемент процедурности в изначально основанный на множествах язык 
SQL. Сам запрос предназначен для извлечения информации, а функции, в нем задействованные, — для проверки 
и преобразования данных, выполнения вычислений, получения системной информации и других целей.
Функции SQL лучше всего рассматривать как средство 
выполнения отдельных узкоспециализированных задач, 
к примеру вычисления квадратного корня или преобразования строчных букв в прописные. В запросах SQL функции 
вызываются по своему имени, которое обычно состоит из 
одного ключевого слова. Функции вызываются в запросе 
для каждой строки результирующего набора данных. Одни 
функции имеют аргументы, другие — нет. От прочих выполняемых модулей СУБД их отличает то, что они всегда 
возвращают значение.
Ранее уже говорилось, что SQL не является процедурным языком (по крайней мере, без SQL/PCM). В нем отсутствуют процедурные средства, 
управляющие последовательностью выполнения команд, такие как циклы и условные переходы, однако функции в некоторой мере компенсируют этот недостаток

				*** Функции SQL и их классификация ***

Несмотря на отсутствие классификации функций в стандарте SQL, их все можно условно разделить на две широкие 
категории: ДЕТЕРМИНИСТСКИЕ и НЕДЕТЕРМИНИСТСКИЕ. Детерминистские функции при подаче им на вход одного и того 
же аргумента всегда возвращают один и тот же результат; недетерминистские могут вернуть разные результаты. Так, функция ABS возвращает абсолютное значение 
передаваемого ей числа — она детерминистская.

 * Все функции конфигурации, курсоров, метаданных, безопасности и системной 
статистики являются недетерминистскими.
 * Практически любой производитель СУБД вводит в свои продукты процедурные 
расширения. В Microsoft SQL Server используется язык Transact-SQL (также применяемый в Sybase), в Oracle — PL/SQL, а в DB2 9.5 — SQL PL. В отличие от 
работающего со множествами SQL, эти процедурные расширения позволяют создавать в своей управляющей среде полноценные программы. Пользовательские 
функции также создаются с помощью одного из этих процедурных расширений.
 * Основная проблема использования функций в запросах заключается в том, что в некоторых реализациях такие запросы могут работать некорректно. Некоторые 
функции идентичны и по имени, и по назначению; другие различаются только именем; некоторые же вообще существуют только в определенных реализациях СУБД.

			*** Скалярные функции стандарта SQL ***

CAST (значение AS тип_данных) - Преобразует поставляемое значение из одного типа данных в другой, 
для которого может быть выполнено осмысленное преобразование
CHAR_LENGHT (выражение) -  Возвращает длину выражения, обычно строки, в символах
CONVERT (выражение USING преобразование) - Возвращает строку, преобразованную согласно правил, определенных в 
параметре преобразование.
CURRENT_DATE - Возвращает текущую системную дату
CURRENT_TIME - (точность) Возвращает текущее системное время с заданной точностью
eCURRENT_TIMESTAMP (точность) - Возвращает текущие системные дату и время с заданной точностью
EXTRACT (часть FROM выражение) - Извлекает заданную именованную часть выражения даты-времени
LOWER (выражение) - Преобразует символьную строку в символы нижнего регистра
OCTET_LENGHT (выражение) - Возвращает длину выражения в байтах (каждый байт содержит 8 бит)
POSITION (символьное_выражение IN источник) - Возвращает положение символьного выражения в источнике
SUBSTRINSS (строковое_выражение, начало, длина) - Возвращает часть строкового выражения указанной длины, начиная с 
заданной позиции
TRANSLATE (строковое_выражение USING правило_преобразования) - Возвращает строку, преобразованную в другую с использованием заданного правила
TRIM (LEADING | TRAILING| BOTH символьное_выражение FROM строковое_выражение) - Возвращает строку из символьного выражения, в котором были удалены ведущие и/или последние заданные символы
UPPER (выражение) - Преобразует символы заданной строки в верхний регистр

Необязательные аргументы имеют значения по умолчанию, применяемые, когда 
они явно не указаны при вызове функции. Так как порядок аргументов фиксирован, обязательно нужно определить те аргументы, которые следуют перед тем, 
который вы собираетесь задать явно. В предыдущем примере, если определить 
номер вхождения (четвертый аргумент), нельзя опускать начальную позицию (третий аргумент).

			*** Стандартные итоговые функции SQL ***

AVG - Возвращает вычисленное среднее значение чисел; неопределенные значения NULL игнорируются. Может использоваться в предложении GROUP BY
COUNT - Возвращает количество строк, возвращенных запросом; может использоваться в предложении GROUP BY
SUM - Возвращает сумму числовых значений столбца. Может использоваться в предложении 
GROUP BY
MAX - Возвращает максимальное значение в заданном столбце; может использоваться в предложении GROUP BY
MIN - Возвращает минимальное значение в заданном столбце; может использоваться в предложении GROUP BY
VAR_POP - Возвращает дисперсию генеральной совокупности значений, из которых предварительно 
исключаются неопределенные значения NULL
VAR_SAMP - Возвращает значение дисперсии выборки числовых значений, не принимая в расчет неопределенные значения NULL
STDDEV_POP - Вычисляет стандартное отклонение генеральной совокупности и возвращает квадратный 
корень вариации
STDDEV_SAMP - Вычисляет накопительное стандартное отклонение выборки и возвращает квадратный корень вариации
COVAR_POP - Возвращает значение ковариации генеральной совокупности, определяемой как сумма 
произведений разностей значений независимой переменной от своего среднего значения, 
умноженных на разность выражения зависимой переменной от своего среднего значения 
и разделенной на количество оставшихся строк. Математически ковариация определяется 
следующей формулой: (SUM(X*Y)–SUM(X)*SUM(Y)/n)/n, где n — количество пар (X,Y)
COVAR_SAMP - Определяется формулой, описанной выше для генеральной совокупности, однако деление в 
данном случае выполняется на количество оставшихся строк за вычетом одной
CORR - Возвращает результат деления ковариации генеральных совокупностей на произведение 
стандартных отклонений зависимой и независимой переменных. Численно равно COVAR_
POP(x,y)/(STDDEV_POP(x)*STDDEV_POP(y))
REGR_COUNT - Возвращает количество строк, оставшихся в группе
REGR_R2 - Вычисляет квадрат коэффициента корреляции
REGR_SLOPE - Возвращает угол наклона линии регрессии, определяемой независимой и зависимой переменными
REGR_INTERCEPT - Вычисляет точку пересечения с осью Y линии регрессии, определяемой зависимой и независимой переменными
REGR_SXX - Возвращает сумму квадратов значений независимой переменной
REGR_SYY - Возвращает сумму квадратов значений зависимой переменной
REGR_SYX - Возвращает сумму произведений зависимой переменной на независимую
REGR_AVGX - Возвращает среднее значение выражения независимой переменной
REGR_AVGY - Возвращает среднее значение выражения зависимой переменной
PERCENTILE_CONT - Возвращает интерполяцию значения, полученного путем рассмотрения пар последовательных строк, указанных в аргументе (значение в диапазоне от 0 до 1), интерпретируется 
как доля от общего количества строк в группе. Эта функция по своей сути работает с тремя 
значениями: количеством строк (RN), степенью (FRN) и верхним пределом (CRN). Если 
RN=CRTN=FRN, возвращается значение из строки RN. В противном случае формула расчета 
следующая:
(CRN–RN)*значение_выражения_строки_FRN+(RN–FRN)*значение_
выражения_строки_CRN
PERCENTILE_DISC - Эта функция вначале сортирует значения согласно предложению ORDER BY, а затем отбирает из них то, которое имеет наименьшее накопительное распределение на основе упорядочения
PERCENT_RANK - Возвращает относительный ранг строки R, определяемый как (RK–1)/(NR–1), где RK — 
ранг R, а NR — число строк в окне раздела R
CUME_DIST - Возвращает относительный ранг строки R, вычисляемый как NP/NR, где NP — количество 
строк, предшествующих строке R в окне упорядочения окна раздела, а NR — общее количество строк в окне раздела R
DENSE_RANK - Возвращает ранг строки R, определяемый как количество строк, предшествующих R (включительно), различных по отношению к окну упорядочения
RANK - Возвращает ранг строки R, определяемый как единица, сложенная с количеством строк, 
предшествующих R и не являющихся ровней R

Итоговые функции возвращают одно значение, основанное на некотором вычислении 
в множестве (группе) значений. Обычно эти функции тесно связаны с предложением GROUP 
BY инструкции SELECT, хотя это и не обязательно для всех из них. При использовании в предложении GROUP BY каждая из итоговых функций 
формирует значение для каждой из групп, а не всего столбца.

тоговые функции математические по своей природе, поэтому работают исключительно с числами. Аргументы этих функций должны быть какого-либо из 
встроенных числовых типов данных, и результат функции должен входить в диапазон значений, определяемый этим типом.

 *** Резюме ***
Встроенные функции несколько компенсируют непроцедурный характер языка SQL. Они 
способны выполнять великое множество задач, варьирующихся от округления чисел до манипуляций со строками, преобразований типов данных и функций со 
сложной процедурной логикой подстановки, таких как DECODE.
Несмотря на то что количество функций, определенных стандартом SQL92/99, относительно невелико (хотя и было расширено), каждый производитель 
СУБД добавил к этому множеству собственный набор полезных средств. Таким образом, совершенно не удивительно, что 
состав фунций, предлагаемых разными СУБД, существенно различается как по функциональности, так и по деталям реализации и синтаксису. 
В настоящей главе был представлен исчерпывающий обзор некоторых наиболее важных 
функций, а также особенностей их реализации в конкретных СУБД. Классификация функций 
была выполнена на основе типов данных, с которыми проводятся операции, а также общей 
функциональности. Некоторые функции, реализующие нестандартные операции, были выделены в особый подкласс “прочие”
